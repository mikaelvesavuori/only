/*doc
---
title: Grid (flex)
name: gridflex
category: Layout
---

The flex grid is used for one-dimensional or simple layouting.

```html_example
<div class="modal">Modal</div>
```
*/

// This is the element that will contain your flex items
%grid__flex { //.grid
	width: 100%;
	padding: 0 $spacing-l;
	margin: 0;
	display: flex;
	flex-direction: row;
	flex-flow: row;
	flex-wrap: wrap;
	justify-content: space-between;
}

.grid__flex {
	@extend %grid__flex;
	margin: 0 -1rem 0 0;
}

// Class to hold all generic stuff for your flex items
.grid__flex--item {
	height: 100px;
	padding: $spacing-s;
	background-color: $color-lightgray;
	margin-bottom: 2%;
	font-size: $font-size-xxs;
	color: $color-black;
	flex: 0 1 30%;
	flex-wrap: wrap;
	//margin: $spacing-s;
}

// These are the classes for sized flex items â€” note how they have 1% of margin to coincide with the "justify-content: space-between" property in .grid__container. Use "justify-content: flex-start" and rounded flex numbers instead if you don't care for margins.
.grid__flex--item--full {
	flex: 0 0 100%;
}

.grid__flex--item--half {
	flex: 0 0 49%;
}

.grid__flex--item--third {
	flex: 0 0 32.33%;
}

// Obviously a bit redundant as there is also a 25% version but whatever floats your boat and needs
.grid__flex--item--fourth {
	flex: 0 0 24%;
}

.grid__flex--item--fifth {
	flex: 0 0 19%;
}

.grid__flex--item--25 {
	flex: 0 0 24%;
}

.grid__flex--item--40 {
	flex: 0 0 39%;
}

.grid__flex--item--60 {
	flex: 0 0 59%;
}

.grid__flex--item--75 {
	flex: 0 0 74%;
}

// Setup mobile or other adapted sizes
@media only screen and (max-width: $viewport-mobile-xl) {
	.grid__flex--item--half, .grid__flex--item--third, .grid__flex--item--fourth, .grid__flex--item--fifth, .grid__flex--item--25, .grid__flex--item--40, .grid__flex--item--60, .grid__flex--item--75 {
		flex: 0 0 100%;
	}
}
